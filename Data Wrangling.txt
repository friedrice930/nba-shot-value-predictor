After an initial glance at my dataset, I found three different columns that contained mistakes or missing values.  The shot_clock column had some missing values.  The touch_time column had negative values, and it is literally impossible for this to happen, so these values would have to be a mistake.  Lastly, some of the observations in the points_type column did not match up to the shot_distance column.  For example, some of the 3 point shots had a shot_distance that would be too close to the rim, while some of the 2 point shots had a shot_distance that would be too far from the rim.
Because of the fact that any observations containing only one of these issues can be pretty easily remedied, I opted to not drop all observations where any of the issues are present.  However, if any observations contained more than one of these issues, then the whole observation would probably become too unusable for the final model.  Therefore, I opted to drop all observations with at least two of these issues, which ended up being 80 observations.
The resulting data frame contains observations with only one of these issues, which can be fixed relatively easily.  The first column I fixed was the touch_time values with negative values.  To fix this, I simply changed all the negative values into a 0 (although technically, it is still impossible to shoot a basketball with a 0 touch time.  But, as touch time is a continuous variable, it is impossible for any value to be exactly any number, as there would be far more decimal places than can be tracked.  So this 0 would just represent a touch_time so short that it is practically 0).
Next, I chose to impute with the mean all the missing values in the shot_clock column.  As the range of the shot_clock can only from 0 to 24, there should be no outliers, making mean a valid choice over the median.  Also, touch_time is a continuous variable, so using the mode would not be ideal.
The final column that needed fixing was the shots_type column, as it had discrepancies with the shot_distance column.  For the observations with discrepancies between the shot distance and the points type, it is unclear whether the discrepancy comes from a mistake in points type, or if it comes from a mistake in shot distance.  I decided to change the points type to match to the shot distance because, given a shot distance in a certain range, you can find out exactly how many points the shot is worth (unless the distance is between 22 and 23.75, but those observations were not counted as errors).
As the column to be predicted is binary, there were no outliers that needed to be dealt with.